name: CICD Pipeline
on:
  push:
    branches:
      - main
      - develop
  pull_request:
    types: [opened, synchronize, reopened]
env:
  SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
  SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and deploy
        run: mvn -B -U -s settings.xml clean package deploy
  devDeploy:
    needs: publish
    name: DEV Deploy
    environment:
      name: DEV
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: "3.8"
      - uses: aws-actions/setup-sam@v2
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
      - run: mkdir -p ~/.m2
      - run: cp settings.xml ~/.m2/settings.xml
      # Build inside Docker containers
      - run: sam build
      # Prevent prompts and failure when the stack is unchanged
      - run: sam deploy --config-env dev --no-confirm-changeset --no-fail-on-empty-changeset --parameter-overrides Stage=dev
  prodDeploy:
    needs: devDeploy
    name: PROD Deploy
    environment:
      name: PROD
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: "3.8"
      - uses: aws-actions/setup-sam@v2
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
      - run: mkdir -p ~/.m2
      - run: cp settings.xml ~/.m2/settings.xml
      # Build inside Docker containers
      - run: sam build
      # Prevent prompts and failure when the stack is unchanged
      - run: sam deploy --config-env prod --no-confirm-changeset --no-fail-on-empty-changeset --parameter-overrides Stage=prod
