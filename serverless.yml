service: capsule-service
variablesResolutionMode: 20210326
package:
  version: '0.0.1-SNAPSHOT'
  artifact: ./application/target/${self:service}-${self:package.version}-${self:provider.name}.jar
  excludeDevDependencies: true
provider:
  name: aws
  runtime: java11
  region: us-east-1
  memorySize: 1024
  timeout: 30
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:*"
      Resource: "*"
  environment:
    APPLICATION_ENVIRONMENT: ${opt:stage}
    CLOUD_REGION: US_East_1
functions:
  createCapsule:
    handler: org.springframework.cloud.function.adapter.aws.SpringBootApiGatewayRequestHandler
    events:
      - http:
          path: capsule/create
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
              - X-User-Login
              - X-Channel-Code
            allowCredentials: true
          request:
            schemas:
              application/json:
                schema: ${file(api-gateway/create.json)}
                name: CreateCapsuleModel
                description: 'create capsule model'
    environment:
      SPRING_CLOUD_FUNCTION_DEFINITION: createFunction
  updateCapsule:
    handler: org.springframework.cloud.function.adapter.aws.SpringBootApiGatewayRequestHandler
    events:
      - http:
          path: capsule/update
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
              - X-User-Login
              - X-Channel-Code
            allowCredentials: true
          request:
            schemas:
              application/json:
                schema: ${file(api-gateway/update.json)}
                name: UpdateCapsuleModel
                description: 'update capsule model'
    environment:
      SPRING_CLOUD_FUNCTION_DEFINITION: updateFunction
  disableCapsule:
    handler: org.springframework.cloud.function.adapter.aws.SpringBootApiGatewayRequestHandler
    events:
      - http:
          path: capsule/disable
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
              - X-User-Login
              - X-Channel-Code
            allowCredentials: true
          request:
            schemas:
              application/json:
                schema: ${file(api-gateway/disable.json)}
                name: DisableCapsuleModel
                description: 'disable capsule model'
    environment:
      SPRING_CLOUD_FUNCTION_DEFINITION: disableFunction
  getCapsule:
    handler: org.springframework.cloud.function.adapter.aws.SpringBootApiGatewayRequestHandler
    events:
      - http:
          path: capsule/get
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
              - X-User-Login
              - X-Channel-Code
            allowCredentials: true
          request:
            schemas:
              application/json:
                schema: ${file(api-gateway/get.json)}
                name: GetCapsuleModel
                description: 'get capsule model'
    environment:
      SPRING_CLOUD_FUNCTION_DEFINITION: getFunction
  bookmarkCapsule:
    handler: org.springframework.cloud.function.adapter.aws.SpringBootApiGatewayRequestHandler
    events:
      - http:
          path: capsule/bookmark
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
              - X-User-Login
              - X-Channel-Code
            allowCredentials: true
          request:
            schemas:
              application/json:
                schema: ${file(api-gateway/bookmark.json)}
                name: BookmarkCapsuleModel
                description: 'Bookmark capsule model'
    environment:
      SPRING_CLOUD_FUNCTION_DEFINITION: bookmarkFunction
  approveCapsule:
    handler: org.springframework.cloud.function.adapter.aws.SpringBootApiGatewayRequestHandler
    events:
      - http:
          path: capsule/approve
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
              - X-User-Login
              - X-Channel-Code
            allowCredentials: true
          request:
            schemas:
              application/json:
                schema: ${file(api-gateway/approve.json)}
                name: ApproveCapsuleModel
                description: 'approve capsule model'
    environment:
      SPRING_CLOUD_FUNCTION_DEFINITION: approveFunction
  viewCapsule:
    handler: org.springframework.cloud.function.adapter.aws.SpringBootApiGatewayRequestHandler
    events:
      - http:
          path: capsule/view
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
              - X-User-Login
              - X-Channel-Code
            allowCredentials: true
          request:
            schemas:
              application/json:
                schema: ${file(api-gateway/view.json)}
                name: ViewCapsuleModel
                description: 'view capsule model'
    environment:
      SPRING_CLOUD_FUNCTION_DEFINITION: viewFunction
  getEditorsPickCapsules:
    handler: org.springframework.cloud.function.adapter.aws.SpringBootApiGatewayRequestHandler
    events:
      - http:
          path: capsule/getEditorsPick
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
              - X-User-Login
              - X-Channel-Code
            allowCredentials: true
          request:
            schemas:
              application/json:
                schema: ${file(api-gateway/getEditorsPick.json)}
                name: GetEditorsPickModel
                description: 'get editors pick model'
    environment:
      SPRING_CLOUD_FUNCTION_DEFINITION: getEditorsPickFunction
  getMyFeedCapsules:
    handler: org.springframework.cloud.function.adapter.aws.SpringBootApiGatewayRequestHandler
    events:
      - http:
          path: capsule/getMyFeed
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
              - X-User-Login
              - X-Channel-Code
            allowCredentials: true
          request:
            schemas:
              application/json:
                schema: ${file(api-gateway/getMyFeed.json)}
                name: GetMyFeedModel
                description: 'get myFeed model'
    environment:
      SPRING_CLOUD_FUNCTION_DEFINITION: getMyFeedFunction
  getTrendingCapsules:
    handler: org.springframework.cloud.function.adapter.aws.SpringBootApiGatewayRequestHandler
    events:
      - http:
          path: capsule/getTrending
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
              - X-User-Login
              - X-Channel-Code
            allowCredentials: true
          request:
            schemas:
              application/json:
                schema: ${file(api-gateway/getTrending.json)}
                name: GetTrendingModel
                description: 'get trending model'
    environment:
      SPRING_CLOUD_FUNCTION_DEFINITION: getTrendingFunction
  getCapsulesPendingApprovals:
    handler: org.springframework.cloud.function.adapter.aws.SpringBootApiGatewayRequestHandler
    events:
      - http:
          path: capsule/getPendingApproval
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
              - X-User-Login
              - X-Channel-Code
            allowCredentials: true
          request:
            schemas:
              application/json:
                schema: ${file(api-gateway/getPendingApproval.json)}
                name: GetPendingApprovalModel
                description: 'get pending approval model'
    environment:
      SPRING_CLOUD_FUNCTION_DEFINITION: getPendingApprovalFunction
  recommendCapsule:
    handler: org.springframework.cloud.function.adapter.aws.SpringBootApiGatewayRequestHandler
    events:
      - http:
          path: capsule/recommend
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
              - X-User-Login
              - X-Channel-Code
            allowCredentials: true
          request:
            schemas:
              application/json:
                schema: ${file(api-gateway/recommend.json)}
                name: RecommendCapsuleModel
                description: 'recommend capsule model'
    environment:
      SPRING_CLOUD_FUNCTION_DEFINITION: recommendFunction
  searchCapsuleByTopic:
    handler: org.springframework.cloud.function.adapter.aws.SpringBootApiGatewayRequestHandler
    events:
      - http:
          path: capsule/searchByTopic
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
              - X-User-Login
              - X-Channel-Code
            allowCredentials: true
          request:
            schemas:
              application/json:
                schema: ${file(api-gateway/searchByTopic.json)}
                name: SearchByTopicModel
                description: 'search by topic model'
    environment:
      SPRING_CLOUD_FUNCTION_DEFINITION: searchByTopicFunction
resources:
  Resources:
    capsuleTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${opt:stage}Capsule
        AttributeDefinitions:
          - AttributeName: capsuleId
            AttributeType: S
          - AttributeName: status
            AttributeType: S
          - AttributeName: topicCode
            AttributeType: S
          - AttributeName: editorsPick
            AttributeType: N
          - AttributeName: recommendations
            AttributeType: N
        KeySchema:
          - AttributeName: capsuleId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
          - IndexName: topicGSI
            KeySchema:
              - AttributeName: status
                KeyType: HASH
              - AttributeName: topicCode
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
          - IndexName: editorsPickGSI
            KeySchema:
              - AttributeName: status
                KeyType: HASH
              - AttributeName: editorsPick
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
          - IndexName: trendingGSI
            KeySchema:
            - AttributeName: status
              KeyType: HASH
            - AttributeName: recommendations
              KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1